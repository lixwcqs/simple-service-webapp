package com.example.resource;

import com.example.cache.UserCache;
import com.example.entity.User;

import javax.servlet.http.HttpServletResponse;
import javax.ws.rs.*;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * Root resource (exposed at "myresource" path)
 */
@Path("/user")
public class UserResource_BAK {

    /**
     * Method handling HTTP GET requests. The returned object will be sent
     * to the client as "text/plain" media type.
     *
     * @return String that will be returned as a text/plain response.
     */
    @GET
    @Produces(MediaType.TEXT_PLAIN)
    public String getIt() {
        return "Got it!";
    }


    @POST
    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
    @Produces(MediaType.APPLICATION_XML)
    public User newUser(
            @FormParam("userId") String userId,
            @FormParam("userName") String userName,
            @FormParam("userAge") int userAge,
            @Context HttpServletResponse servletResponse
    ) throws IOException {
        System.out.println("json:\tuserName: " + userName);
        User user = new User(userId,userName,userAge);
        UserCache.getUserCache().put(userId,user);
        return user;
    }

    @GET
    @Path("/{id}")
//    @Produces(MediaType.APPLICATION_XML)
    @Produces(MediaType.APPLICATION_JSON)
    public User getUser(@PathParam("id") String id) {

        System.out.println("json get -----------------------------------f");
       User user = UserCache.getUserCache().get(id);
        if(user==null){
            throw new NotFoundException("No such User.");
        }
        return user;
    }

    @GET
    @Path("/map/all")
//    @Produces(MediaType.APPLICATION_XML)
    @Produces(MediaType.APPLICATION_JSON)
    public Map<String,User> getAllUsers(@PathParam("id") String id) {
        System.out.println("返回Map");
        return UserCache.getUserCache();

    }

    @GET
    @Path("/list/all")
//    @Produces(MediaType.APPLICATION_XML)
    @Produces(MediaType.APPLICATION_JSON)
    public List<String> getListUsers(@PathParam("id") String id) {
        System.out.println("返回列表");
        return UserCache.getUserCache().keySet().stream().collect(Collectors.toList());

    }
}
